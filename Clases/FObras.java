

package galeriadearte;
import java.awt.Toolkit;
import java.sql.*;
import java.util.Calendar;
import javax.swing.JOptionPane;
import org.freixas.jcalendar.JCalendarCombo;

/**
 * Clase para controlar las obras de los Artistas
 */
public class FObras extends javax.swing.JFrame {

    private Conexion con;
    private ResultSet rsArtistas;
    private int [] Artistas;
    private int [] fCreacion;
    private int [] fIngreso;
    private String fechaCreacionO;
    private long codigoArtista;
    private int numArtistas;
    private int Estado;
    
    public FObras(){
        
    }
    
    /**
     * @param u Nombre del usuario
     * @param p Contraseña del usuario
     */
    public FObras(String u, String p) {
        
        initComponents();
  
        Artistas = new int[200];
        fCreacion = new int[3];
        fIngreso = new int[3];
        
        //Se crea un objeto de la clase Cenexion, para interactuar con la base de datos
        con = new Conexion(u, p, tablaO, "select * from ARTISTAS.Obras");
        
        IniFechaIngreso();
        CargaArtistas();
        setLocationRelativeTo(this);
        Estado = 0;
    }
    
    /**
     * Metodo para cargar los nombres de los Artistas existentes en la base de datos, en un 
     * control de tipo ComboBox
     */
    public void CargaArtistas(){
        
        numArtistas = 0;
        
        try
        {
             con.EstableceConexion();
             rsArtistas = con.getSentencia().executeQuery("select A.Id_Artista, (A.Nombre|| ' ' || A.apellidos ) as Nombre  from ARTISTAS.Artistas A");
    
             while(rsArtistas.next())
             {
               cbArtista.addItem(rsArtistas.getObject(2));
               Artistas[numArtistas++] = Integer.parseInt( String.valueOf(rsArtistas.getObject(1)));
             }
             con.cierraConexion();
             
        }catch(Exception e)
        {
           JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void IniFechaIngreso(){
        
        JCalendarCombo cal = new JCalendarCombo();
        
        this.fIngreso = creaFecha(cal);
        this.etFechaIngreso.setText(fIngreso[2]+"-"+fIngreso[1]+"-"+fIngreso[0]);
    }
    
    private void IniFechaCreacion(){
        
        this.fCreacion = creaFecha(fechaCreacion);
        this.fechaCreacionO = fCreacion[2]+"-"+fCreacion[1]+"-"+fCreacion[0];
    }
    
    private int[] creaFecha(JCalendarCombo cal){
       
        Calendar  cl;
        int []date = new int[3];
        
        cl = cal.getCalendar();
        
        date[0]=cl.get(5); //Dia
        date[1]=cl.get(2)+1; //Mes
        date[2]=cl.get(1); //Año
        
        return(date);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etIdObra = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaO = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        fechaCreacion = new org.freixas.jcalendar.JCalendarCombo();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox();
        cbEstilo = new javax.swing.JComboBox();
        cbMedio = new javax.swing.JComboBox();
        cbArtista = new javax.swing.JComboBox();
        etFechaIngreso = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        etEstado = new javax.swing.JLabel();
        tbTitulo = new javax.swing.JTextField();
        tbPrecio = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Obras Por Artista");
        setBackground(new java.awt.Color(255, 255, 255));

        etIdObra.setBackground(new java.awt.Color(255, 102, 204));
        etIdObra.setText("#");

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Estilo:");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Precio:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Artista:");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Id Obra:");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Tipo:");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaO.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaO.setUpdateSelectionOnSort(false);
        tablaO.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaOMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaO);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Título:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Fecha de creación:");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel11.setText("Medio:");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Fecha de Ingreso:");

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pintura", "Escultura", "Collage" }));

        cbEstilo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Contemporaneo", "Impresionista", "Folk" }));

        cbMedio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Óleo", "Acuarela", "Acrílico", "Mármol", "Mixto" }));

        etFechaIngreso.setBackground(new java.awt.Color(255, 102, 204));
        etFechaIngreso.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etFechaIngreso.setText("jLabel1");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel10.setText("Estado:");

        etEstado.setBackground(new java.awt.Color(255, 102, 204));
        etEstado.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        etEstado.setText("No Vendida");

        tbTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbTituloKeyTyped(evt);
            }
        });

        tbPrecio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tbPrecioKeyTyped(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 153));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuBar1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jMenuBar1.setDoubleBuffered(true);
        jMenuBar1.setPreferredSize(new java.awt.Dimension(355, 60));

        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galeriadearte/brushes.png"))); // NOI18N
        jMenu1.setText("    Agregar   ");
        jMenu1.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu3.setForeground(new java.awt.Color(255, 255, 255));
        jMenu3.setText("    Eliminar   ");
        jMenu3.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setForeground(new java.awt.Color(255, 255, 255));
        jMenu4.setText("    Modificar   ");
        jMenu4.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galeriadearte/edit-clear.png"))); // NOI18N
        jMenu2.setText("Limpiar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbMedio, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbEstilo, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel1)
                                                    .addComponent(jLabel2))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(etIdObra, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbArtista, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(2, 2, 2)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(92, 92, 92)
                                            .addComponent(jLabel8))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(etEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fechaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(etFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tbPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(29, 29, 29))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(etIdObra))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbArtista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tbTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(tbPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(fechaCreacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(etFechaIngreso))))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel6)
                        .addComponent(cbEstilo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel10)
                        .addComponent(etEstado)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(cbMedio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        InsertObra();
    }//GEN-LAST:event_jMenu1MouseClicked
    
    /**
     * Métodoo para registrar un obra en la base de datos
     */
    public void InsertObra(){
        String sql;
        
        //Validacion previas a la insercion
        if(this.tbTitulo.getText().trim().length() != 0 && this.tbPrecio.getText().length() != 0)
        {
            IniFechaCreacion();
            if(this.ValidaFechas() == 1)
            {
                //Definicion de la consulta DML para registrar una obra 
                this.codigoArtista = Artistas[this.cbArtista.getSelectedIndex()];   
                sql = "insert into ARTISTAS.Obras values (default,"
                        + this.codigoArtista + ",'"
                        + this.tbTitulo.getText()+ "','"
                        + this.cbTipo.getSelectedItem()+"','"
                        + this.cbEstilo.getSelectedItem()+"','"
                        + this.cbMedio.getSelectedItem()+"',"
                        + this.tbPrecio.getText()+",'"
                        + this.fechaCreacionO+"','"
                        + this.etFechaIngreso.getText()+"',"
                        + this.Estado+");";

                con.setSQL(sql);//Se establece la consulta al objeto conexion
                con.EjecutaSentencia();//Se ejecuta la sentencia 
                
            }else{
                JOptionPane.showMessageDialog(null, "La fecha de creación debe ser menor a la fecha de ingreso","Inserción", JOptionPane.ERROR_MESSAGE);
            }
        }else{
                JOptionPane.showMessageDialog(null, "No puede haber campos vacios","Inserción", JOptionPane.ERROR_MESSAGE);
            }
    }
        
    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
       this.Limpia();    
    }//GEN-LAST:event_jMenu2MouseClicked

    private void tablaOMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaOMouseClicked
        
        String fecha;
        
        int tuplaSel = tablaO.getSelectedRow();
        this.etIdObra.setText(String.valueOf(con.getModelo().getValueAt(tuplaSel, 0)));
        this.cbArtista.setSelectedIndex(this.getArtista(tuplaSel));
        this.tbTitulo.setText((String)con.getModelo().getValueAt(tuplaSel, 2));
        this.cbTipo.setSelectedItem(con.getModelo().getValueAt(tuplaSel, 3));
        this.cbEstilo.setSelectedItem(con.getModelo().getValueAt(tuplaSel, 4));
        this.cbMedio.setSelectedItem(con.getModelo().getValueAt(tuplaSel, 5));
        this.tbPrecio.setText(String.valueOf(con.getModelo().getValueAt(tuplaSel, 6)));
        this.fechaCreacionO = String.valueOf(con.getModelo().getValueAt(tuplaSel, 7));
        this.fechaCreacion.setDate(Date.valueOf(fechaCreacionO));
        fecha = String.valueOf(con.getModelo().getValueAt(tuplaSel, 8));
        this.etFechaIngreso.setText(fecha);
        
        if(Integer.valueOf(String.valueOf(con.getModelo().getValueAt(tuplaSel, 9))) == 1 )
        {
            this.etEstado.setText("Vendida");
            this.Estado = 1;
        }
        else
        {
            this.etEstado.setText("No Vendida");
            this.Estado = 0;
        }
        
    }//GEN-LAST:event_tablaOMouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        DeleteObra();
    }//GEN-LAST:event_jMenu3MouseClicked
    
    /**
     * Método para eleminar una obra de la base de datos
     */
    public void DeleteObra(){
        String sql;
        int opc;
        
        if(tablaO.getSelectedRow() >= 0)
        {
            opc = JOptionPane.showConfirmDialog(null, "¿Esta seguro que quiere eliminar el registro?", "Eliminación", JOptionPane.YES_NO_OPTION);
            if(opc == 0)
            {
                //Se establece la consulta para eliminar el registri de una obra
                sql = "delete from ARTISTAS.Obras where Id_Obra = "+this.etIdObra.getText();
                con.setSQL(sql);
                con.EjecutaSentencia();//Ejecucion de la consulta en la base de datos
            }
        }else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro","Eliminación", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
         UpdateObra();      
    }//GEN-LAST:event_jMenu4MouseClicked
    
    /**
     * Método para modificar los datos de una obra
     */
    public void UpdateObra(){
        String sql;
        
        //Se valida que los cambios de los datos sean correctos
        if(!this.tbTitulo.getText().trim().isEmpty() && this.tbPrecio.getText().length() != 0)
        {
            IniFechaCreacion();
            if(this.ValidaFechas() == 1)
            {
                //Se establece la consulta para hacer la modificación de los datos de la obra
                 sql = "update ARTISTAS.Obras set Id_Artista="
                        + this.codigoArtista + ",Titulo='"
                        + this.tbTitulo.getText()+ "',Tipo='"
                        + this.cbTipo.getSelectedItem()+"',Estilo='"
                        + this.cbEstilo.getSelectedItem()+"',Medio='"
                        + this.cbMedio.getSelectedItem()+"',Precio="
                        + this.tbPrecio.getText()+",Fecha_Creacion='"
                        + this.fechaCreacionO+"',Fecha_Ingreso='"
                        + this.etFechaIngreso.getText()+"',Estado="
                        + this.Estado+ "where Id_Obra ="+this.etIdObra.getText()+";";
                con.setSQL(sql);
                con.EjecutaSentencia();
            }else
            {
                JOptionPane.showMessageDialog(null, "La fecha de creación debe ser menor a la fecha de ingreso","Inserción", JOptionPane.ERROR_MESSAGE);
            }
        }else
         {
                JOptionPane.showMessageDialog(null, "No puede haber campos vacios","Inserción", JOptionPane.ERROR_MESSAGE);
         }

    }
    
    private void tbTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbTituloKeyTyped
        
        if(!Character.isSpaceChar(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) &&!Character.isLetter(evt.getKeyChar()))
        { 
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tbTituloKeyTyped

    private void tbPrecioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbPrecioKeyTyped
        if((tbPrecio.getText().length() >= 11) || (!Character.isDigit(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar())))
        {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tbPrecioKeyTyped
    
    /**
     * Método para obtener un indice asociado a un artista
     * @param tuplaSel Registro seleccionado en la tabla de la interfacez
     * @return Un valor entero que indica el indice del control ComboBox, este indice 
     *         es utilizado para modificar el elemento actual del control
     */
    public int getArtista(int tuplaSel){
        
        int index = -1;
       
        this.codigoArtista = Integer.valueOf(String.valueOf(con.getModelo().getValueAt(tuplaSel, 1)));
        
        for(int i = 0; i < this.numArtistas; i++)
            if (Artistas[i] == this.codigoArtista )
            {
               index = i;
               break;
            }
        
        return(index);
    }
    
    private void Limpia(){
        
        this.etIdObra.setText("#");
        this.tbTitulo.setText("");
        this.tbPrecio.setText("");
        this.etEstado.setText("No Vendida");
        this.Estado = 0;
    }
    
    /**
     * Este método compara que la fecha de creacion de la obra sea
     * menor a la fecha de ingreso
     * @return res = 0 si la fecha de creacion es mayor a la fecha de ingreso
     *         res = 1 si la fecha de creacion es menor a la fecha de ingreso
     */
    public int ValidaFechas(){
        
        int res = 0;
        
        if(fCreacion[2] < fIngreso[2])
        {
            res = 1;
        }
        else
            if(fCreacion[2] == fIngreso[2])
            {
                if(fCreacion[1] < fIngreso[1])
                {
                    res = 1;
                }
                else
                    if(fCreacion[1] == fIngreso[1])
                    {
                          if(fCreacion[0] < fIngreso[0])
                          {
                              res = 1;
                          }
                    }
            }
      
        return(res);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FObras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FObras().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbArtista;
    private javax.swing.JComboBox cbEstilo;
    private javax.swing.JComboBox cbMedio;
    private javax.swing.JComboBox cbTipo;
    private javax.swing.JLabel etEstado;
    private javax.swing.JLabel etFechaIngreso;
    private javax.swing.JLabel etIdObra;
    private org.freixas.jcalendar.JCalendarCombo fechaCreacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaO;
    private javax.swing.JTextField tbPrecio;
    private javax.swing.JTextField tbTitulo;
    // End of variables declaration//GEN-END:variables
}
