
package galeriadearte;
import java.awt.Toolkit;
import java.sql.*;
import java.util.Calendar;
import javax.swing.JOptionPane;
import org.freixas.jcalendar.JCalendarCombo;

/**
 *Esta clase es utilizada para gestionar las exposiciones que se haran en la galeria de arte
 */
public class FExposicion extends javax.swing.JFrame {

    private Conexion con;
    private int [] fCierre;
    private int [] fApertura;
    private String fechaCierre;
    private String fechaApertura;
    private long idExp;
    
    public FExposicion()
    {
    
    }
    
    /**
     * 
     * @param u Nombre del usuario
     * @param p Contraseña del usuario
     */
    public FExposicion(String u,String p) {
        
        initComponents();
       
        con = new Conexion(u, p, TablaExposiciones, "select * from EXPOSICIONES.Exposicion");
        
        this.fCierre = new int[3];
        this.fApertura = new int[3];
        this.setLocationRelativeTo(this);
        this.Limpia();
    }

    private void IniFechaCierre(){
            
        this.fCierre = creaFecha(FechaCierre);
        this.fechaCierre = fCierre[2]+"-"+fCierre[1]+"-"+fCierre[0];
    }
    
     private void IniFechaApertura(){
        
        this.fApertura = creaFecha(FechaApertura);
        this.fechaApertura = fApertura[2]+"-"+fApertura[1]+"-"+fApertura[0];
    }
     
    private int[] creaFecha(JCalendarCombo cal){
       
        Calendar  cl;
        int []date = new int[3];
        
        cl = cal.getCalendar();
        
        date[0]=cl.get(5); //Dia
        date[1]=cl.get(2)+1; //Mes
        date[2]=cl.get(1); //Año
        
        return(date);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaExposiciones = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        Titulo = new javax.swing.JTextField();
        IdExposicion = new javax.swing.JLabel();
        Descripcion = new javax.swing.JTextField();
        FechaCierre = new org.freixas.jcalendar.JCalendarCombo();
        FechaApertura = new org.freixas.jcalendar.JCalendarCombo();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Exposiciones");

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel1.setText("Id Exposición:");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Título:");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Descripción:");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Fecha_Apertura:");

        jButton1.setText("Agregar Vendedores en Exposición");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Agregar Artistas en Exposición");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Fecha_Cierre:");

        TablaExposiciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TablaExposiciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaExposicionesMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(TablaExposiciones);

        jButton3.setText("Salir");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        Titulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TituloKeyTyped(evt);
            }
        });

        IdExposicion.setBackground(new java.awt.Color(255, 102, 204));
        IdExposicion.setText("1");

        Descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DescripcionKeyTyped(evt);
            }
        });

        jMenuBar1.setBackground(new java.awt.Color(153, 153, 153));
        jMenuBar1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jMenuBar1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuBar1.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jMenuBar1.setDoubleBuffered(true);
        jMenuBar1.setPreferredSize(new java.awt.Dimension(355, 60));

        jMenu1.setForeground(new java.awt.Color(255, 255, 255));
        jMenu1.setText("    Agregar   ");
        jMenu1.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu3.setForeground(new java.awt.Color(255, 255, 255));
        jMenu3.setText("    Eliminar   ");
        jMenu3.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setForeground(new java.awt.Color(255, 255, 255));
        jMenu4.setText("    Modificar   ");
        jMenu4.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/galeriadearte/edit-clear.png"))); // NOI18N
        jMenu2.setText("Limpiar");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(IdExposicion, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(125, 125, 125))
                                            .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(FechaCierre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(FechaApertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(jButton1)))
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 675, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(FechaApertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(FechaCierre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(IdExposicion, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void Limpia(){
        
        this.IdExposicion.setText("#");
        this.Titulo.setText("");
        this.Descripcion.setText("");
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ArtistasExposicion art = new ArtistasExposicion(con.getUser(),con.getPassword(),idExp);
        art.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        VendedoresExposicion ven= new VendedoresExposicion(con.getUser(),con.getPassword(),idExp);
        ven.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

     private int camposVacios(){
        
        int res = 0;
        
        if(this.Titulo.getText().trim().length() == 0 ||
           this.Descripcion.getText().trim().length() == 0)
            res = 1;
        
        return(res);
    }
    
    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        InsertExposicion();
    }//GEN-LAST:event_jMenu1MouseClicked
    
    /**
     * Método para registrar exposiones de la galeria de arte
     */
    public void InsertExposicion(){
        String sql;
        
        if(this.camposVacios() == 0)
        {
            IniFechaCierre();
            IniFechaApertura();
            /*
             * Si la fecha es correcta, se prepara la sentencia de SQL para
             * poder hacer la insercion en la base de datos
             */
            if(this.ValidaFechas() == 1)
            {
                sql = "insert into EXPOSICIONES.Exposicion values (default,'"
                        + this.Titulo.getText() + "','"
                        + this.Descripcion.getText()+ "','"
                        + this.fechaApertura+"','"
                        + this.fechaCierre+"');";
                
                //Se establece la sentecia sql al objeto con y se ejecuta
                con.setSQL(sql);
                con.EjecutaSentencia();
            }
            else{
                JOptionPane.showMessageDialog(null, "La fecha de apertura debe ser menor a la fecha de cierre","Inserción", JOptionPane.ERROR_MESSAGE);
            }
        }else
        {
            JOptionPane.showMessageDialog(null, "No puede haber campos vacios","Inserción", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        DeleteExposicion();
    }//GEN-LAST:event_jMenu3MouseClicked
    
    /**
     * Método encargado de elemininar una exposicion de forma física
     */
    public void DeleteExposicion(){
        
        String sql;
        int opc;

        if(TablaExposiciones.getSelectedRow() >= 0)
        {
            opc = JOptionPane.showConfirmDialog(null, "¿Esta seguro que quiere eliminar el registro?", "Eliminación", JOptionPane.YES_NO_OPTION);
            if(opc == 0)
            {
                //Se define la consulta con el lenguaje DML para poder eleminar el registro
                sql = "delete from EXPOSICIONES.Exposicion where Id_Exposicion = "+this.IdExposicion.getText();
                con.setSQL(sql);
                con.EjecutaSentencia();
            }
        }else {
            JOptionPane.showMessageDialog(null, "Seleccione un registro","Eliminación", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        UpdateExposicion();
    }//GEN-LAST:event_jMenu4MouseClicked
    
    /**
     * Método para modificar los datos de alguna exposición
     */
    public void UpdateExposicion(){
        String sql;
        
        //Se efectuan las validaciones necesarias
        if(this.camposVacios() == 0)
        {
            IniFechaCierre();
            IniFechaApertura();
            if(this.ValidaFechas() == 1)
            {
                //Si todo es correcto se declara una cadena, que contenga la sentencia DML para actualizar los datos de la exposicón
                sql = "update EXPOSICIONES.Exposicion set Id_Exposicion="
                + this.IdExposicion.getText()+",Titulo='"
                + this.Titulo.getText() + "',Descripcion='"
                + this.Descripcion.getText()+ "',Fecha_Apertura='"
                + this.fechaApertura+"',Fecha_Cierre='"
                + this.fechaCierre+ "'where Id_Exposicion ="+this.IdExposicion.getText();
                
                con.setSQL(sql);
                con.EjecutaSentencia();
            }
            else
            {
                JOptionPane.showMessageDialog(null, "La fecha de apertura debe ser menor a la fecha de cierre","Inserción", JOptionPane.ERROR_MESSAGE);
            }
        }else
        {
            JOptionPane.showMessageDialog(null, "No puede haber campos vacios","Inserción", JOptionPane.ERROR_MESSAGE);
        }
    }   
    
    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        this.Limpia();
    }//GEN-LAST:event_jMenu2MouseClicked

    /**
     * Este método es utlizado para validar que la fecha de apertura sea menor a la fecha de cierre
     * @return 0 si la fecha de apertura es mayor en caso contrario retorna 1
     */
    public int ValidaFechas(){
        
        int res = 0;
        
        if(fApertura[2] < fCierre[2])
        {
            res = 1;
        }
        else
            if(fApertura[2] == fCierre[2])
            {
                if(fApertura[1] < fCierre[1])
                {
                    res = 1;
                }
                else
                    if(fApertura[1] == fCierre[1])
                    {
                          if(fApertura[0] < fCierre[0])
                          {
                              res = 1;
                          }
                    }
            }
      
        return(res);
    }
    
    private void TablaExposicionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaExposicionesMouseClicked
       
        int tuplaSel = TablaExposiciones.getSelectedRow();
        
        idExp=Long.valueOf(String.valueOf(con.getModelo().getValueAt(tuplaSel, 0)));
        IdExposicion.setText(String.valueOf(con.getModelo().getValueAt(tuplaSel, 0)));
        Titulo.setText(String.valueOf(con.getModelo().getValueAt(tuplaSel, 1)));
        Descripcion.setText(String.valueOf(con.getModelo().getValueAt(tuplaSel, 2)));
        fechaApertura = String.valueOf(con.getModelo().getValueAt(tuplaSel, 4));
        FechaApertura.setDate(Date.valueOf(fechaApertura));
        fechaCierre = String.valueOf(con.getModelo().getValueAt(tuplaSel, 4));
        FechaCierre.setDate(Date.valueOf(fechaCierre));
    
    }//GEN-LAST:event_TablaExposicionesMouseClicked
   
    private void validaCadena(java.awt.event.KeyEvent evt){

        if(!Character.isSpaceChar(evt.getKeyChar()) && !Character.isISOControl(evt.getKeyChar()) &&!Character.isLetter(evt.getKeyChar()))
        { 
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }
    private void TituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TituloKeyTyped
        validaCadena(evt);
    }//GEN-LAST:event_TituloKeyTyped

    private void DescripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DescripcionKeyTyped
        validaCadena(evt);
    }//GEN-LAST:event_DescripcionKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FExposicion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FExposicion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FExposicion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FExposicion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FExposicion().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Descripcion;
    private org.freixas.jcalendar.JCalendarCombo FechaApertura;
    private org.freixas.jcalendar.JCalendarCombo FechaCierre;
    private javax.swing.JLabel IdExposicion;
    private javax.swing.JTable TablaExposiciones;
    private javax.swing.JTextField Titulo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane6;
    // End of variables declaration//GEN-END:variables
}
